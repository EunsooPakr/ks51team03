<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ks51team03.company.mapper.CompanyMapper">

	<resultMap type="Member" id="memberResultMap">
		<!-- pk, column -->
		<id column="m_id" property="memberId"/>
		<result column="m_pw" property="memberPw"/>
		<result column="m_name" property="memberName"/>
		<result column="m_level" property="memberLevel"/>
		<result column="level_name" property="memberLevelName"/>
		<result column="m_email" property="memberEmail"/>
		<result column="m_addr" property="memberAddr"/>
		<result column="m_reg_date" property="memberRegDate"/>
	</resultMap>

	<resultMap type="ks51team03.company.dto.Company" id="CompanyResultMap">
		<id 	column="ccode" property="companyCode" />
		<result column="com_class" property="companyClass" />
		<result column="com_name" property="companyName" />
		<result column="com_ceo" property="companyCeo" />
		<result column="com_addr" property="companyAddr" />
		<result column="com_addr_detail" property="companyAddrDetail" />
		<result column="com_phone" property="companyPhone" />
		<result column="com_stfcount" property="companyStfCount" />
		<result column="com_email" property="companyEmail" />
		<result column="com_parking" property="companyParking" />
		<result column="com_page" property="companyPage" />
		<result column="com_reg_date" property="companyRegDate" />
		<result column="com_post_num" property="comPostNum" />
		<result column="id" property="memberId" />
		<result column="com_post_num" property="comPostNum" />
	</resultMap>

	<resultMap type="ks51team03.company.dto.ComMap" id="ComMapResultMap">
		<id column="ccode" property="cCode"/>
		<result column="cm_link" property="cmLink"/>
		<result column="cm_x" property="cmX"/>
		<result column="cm_y" property="cmY"/>
		<result column="id" property="memberId"/>
	</resultMap>
	<resultMap id="ComStaffResultMap" type="ComStaff">
		<id column="stfcode" property="stfCode" />
		<result column="id" property="memberId" />
		<result column="ccode" property="cCode" />
		<result column="level" property="level" />
		<result column="stf_phone" property="stfPhone" />
		<result column="stf_check" property="stfCheck" />
		<result column="stf_appro_id" property="stfApproId" />
		<result column="stf_date" property="stfDate" />
		<result column="name" property="memberName" />
	</resultMap>
	<resultMap id="ComOperTimeResultMap" type="ComOperTime">
		<id column="otcode" property="otCode" />
		<result column="ccode" property="cCode" />
		<result column="ot_mon" property="otMon" />
		<result column="ot_tue" property="otTue" />
		<result column="ot_wed" property="otWed" />
		<result column="ot_thu" property="otThu" />
		<result column="ot_fri" property="otFri" />
		<result column="ot_sat" property="otSat" />
		<result column="ot_sun" property="otSun" />
		<result column="ot_holiday" property="otHoliday" />
		<result column="ot_regular_holiday" property="otRegularHoliday" />
		<result column="ot_break_time" property="otBreakTime" />
		<result column="id" property="memberId" />
		<result column="ot_reg_date" property="otRegDate" />
	</resultMap>

	<resultMap id="ComReviewResultMap" type="ComReview">
		<id column="revcode" property="revCode" />
		<result column="id" property="memberId" />
		<result column="rev_category" property="revCategory" />
		<result column="ccode" property="cCode" />
		<result column="rev_admin_date" property="revAdminDate" />
		<result column="rev_update_date" property="revUpdateDate" />
		<result column="rev_delete_date" property="revDeleteDate" />
		<!-- <result column="rev_img" property="revImg" /> -->
		<result column="rev_scope" property="revScope" />
		<result column="rev_content" property="revContent" />
	</resultMap>

	<resultMap id="QuestionResultMap" type="ComQuestion">
		<id column="quesnum" property="quesNum" />
		<result column="ccode" property="cCode" />
		<result column="qctenum" property="qcteNum" />
		<result column="id" property="memberId" />
		<result column="ques_content" property="quesContent" />
		<result column="ques_date" property="quesDate" />
	</resultMap>

	<resultMap id="QuestionAnswerResultMap" type="ComQuestionAnswer">
		<id column="qacode" property="qaCode" />
		<result column="id" property="memberId" />
		<result column="quesnum" property="quesNum" />
		<result column="qa_content" property="qaContent" />
		<result column="qa_reg" property="qaReg" />
		<result column="qa_update" property="qaUpdate" />
	</resultMap>


	<select id="getMaxRevCode" resultType="String">
		SELECT MAX(CAST(SUBSTRING_INDEX(revcode, 'rev', -1) AS UNSIGNED)) FROM reviews
	</select>

	<insert id="insertReview" parameterType="ComReview">
		<selectKey keyProperty="revCode" resultType="String" order="BEFORE">
			SELECT
			CASE
			WHEN COUNT(*) = 0 THEN 'rev1'
			ELSE CONCAT('rev', (MAX(CAST(SUBSTRING_INDEX(revcode, 'rev', -1) AS UNSIGNED)) + 1))
			END
			FROM service_reviews
		</selectKey>
		-- 리뷰 등록
		INSERT INTO service_reviews
		(revcode, id, ccode, rev_admin_date, rev_update_date, rev_delete_date, file_idx, rev_scope, rev_content)
		VALUES
		(#{revCode}, #{memberId}, #{cCode}, CURDATE(), null, null, #{revImg}, #{revScope}, #{revContent})
	</insert>

	<select id="getMaxQuesNum" resultType="String">
		SELECT MAX(CAST(SUBSTRING_INDEX(quesnum, 'ques', -1) AS UNSIGNED)) FROM questions
	</select>

	<insert id="insertQuestion" parameterType="ComQuestion">
		<selectKey keyProperty="quesNum" resultType="String" order="BEFORE">
			SELECT
			CASE
			WHEN COUNT(*) = 0 THEN 'ques1'
			ELSE CONCAT('ques', (MAX(CAST(SUBSTRING_INDEX(quesnum, 'ques', -1) AS UNSIGNED)) + 1))
			END
			FROM questions
		</selectKey>
		-- 문의 등록
		INSERT INTO questions
		(quesnum, ccode, qctenum, id, ques_content, ques_date)
		VALUES
		(#{quesNum}, #{cCode}, #{qcteNum}, #{memberId}, #{quesContent}, #{quesDate})
	</insert>


	<select id="getAnswerByQuesNum" parameterType="String" resultMap="QuestionAnswerResultMap">
		-- 문의 답변 조회
		SELECT
			qa.qacode, qa.id, qa.quesnum, qa.qa_content, qa.qa_reg, qa.qa_update
		FROM
			questions_answer as qa
		WHERE
			quesnum = #{quesnum}
	</select>

	<update id="updateAnswer" parameterType="ComQuestionAnswer">
		-- 문의 답변 수정
		UPDATE
			questions_answer
		SET
			qa_content = #{qaContent},
			qa_update = CURDATE()
		WHERE
			qacode = #{qaCode}
	</update>

	<select id="getCompanyQuestionById" parameterType="String" resultMap="QuestionResultMap">
		-- 특정 문의 검색
		SELECT
		quesnum, ccode, qctenum, id, ques_content, ques_date
		FROM
		questions
		WHERE
		quesnum = #{quesnum}
	</select>


	<select id="getCompanyQuestionAnswer" resultMap="QuestionAnswerResultMap">
		-- 업체 문의 답변 검색
		SELECT
			qa.qacode, qa.id, qa.quesnum, qa.qa_content, qa.qa_reg, qa.qa_update
		FROM
			questions_answer AS qa
		INNER JOIN
			questions AS q
		ON
			qa.quesnum = q.quesnum
		WHERE
			q.ccode =  #{cCode}
	</select>

	<select id="getCompanyQuestion" resultMap="QuestionResultMap">
		-- 업체 문의 검색
		SELECT
			quesnum, ccode, qctenum, id, ques_content, ques_date
		FROM
			questions
		WHERE
			ccode = #{cCode}
	</select>

	<delete id="deleteAnswersByQuesNum" parameterType="ComQuestion" >
		-- 업체 문의 삭제전 답변부터 삭제
		DELETE FROM
			questions_answer
		WHERE
			quesnum = #{quesNum}
	</delete>

	<delete id="deleteQuestion" parameterType="ComQuestion" >
		-- 업체 문의 삭제
		DELETE
		FROM
		questions
		WHERE
		quesnum = #{quesNum}
	</delete>

	<insert id="insertAnswer" parameterType="ks51team03.company.dto.ComQuestionAnswer">
		<selectKey keyProperty="qaCode" resultType="String" order="BEFORE">
			SELECT
			CASE
			WHEN COUNT(qacode) = 0 THEN 'qa1'
			ELSE
			CONCAT(
			'qa',
			(MAX(CAST(SUBSTRING_INDEX(qacode, 'qa', -1) AS UNSIGNED)) + 1)
			)
			END AS qaCode
			FROM
			questions_answer;
		</selectKey>
		INSERT INTO questions_answer
		(qacode, id, quesnum, qa_content, qa_reg, qa_update)
		VALUES
		(#{qaCode}, #{memberId}, #{quesNum}, #{qaContent}, CURDATE(), NULL)
	</insert>

	<select id="getCompanyReviewCount" resultType="java.lang.Integer" parameterType="java.lang.String" >
		-- 업체 리뷰수 검색
		SELECT
			count(ccode)
		FROM
			service_reviews
		WHERE
			ccode = #{cCode}
	</select>

	<select id="getCompanyReview" parameterType="String" resultMap="ComReviewResultMap">
		-- 업체 코드로 리뷰 검색
		SELECT
		revcode, id, ccode, rev_admin_date, rev_update_date, rev_delete_date,
		file_idx, rev_scope, rev_content
		FROM
		service_reviews
		WHERE
		ccode = #{cCode}
	</select>

	<select id="getCompanyOperTime" resultMap="ComOperTimeResultMap">
		-- 업체 운영시간 검색
		SELECT
			otcode, ccode, ot_mon, ot_tue, ot_wed, ot_thu, ot_fri, ot_sat, ot_sun, ot_holiday, ot_regular_holiday, ot_break_time, id, ot_reg_date
		FROM
			com_oper_time
		WHERE
			ccode = #{cCode}
	</select>

	<select id="getCompanyList" resultMap="CompanyResultMap">
		-- 전체 업체 검색
		SELECT
			ccode,
			com_class,
			com_name,
			com_ceo,
			com_addr,
			com_addr_detail,
			com_phone,
			com_stfcount,
			com_email,
			com_parking,
			com_page,
			com_reg_date,
			id,
			com_post_num
		FROM
			company
	</select>

	<select id="getCompanyCodeByMemberId" parameterType="String" resultType="String">
		-- 아이디로 직원 여부 및 업체 코드 반환
		SELECT ccode FROM staff WHERE id = #{memberId}
	</select>

	<select id="getCompanyInfoByCcode" resultMap="CompanyResultMap">
		-- ccode로 업체 정보 검색
		SELECT
			ccode,
			com_class,
			com_name,
			com_ceo,
			com_addr,
			com_addr_detail,
			com_phone,
			com_stfcount,
			com_email,
			com_parking,
			com_page,
			com_reg_date,
			id,
			com_post_num
		FROM
			company
		WHERE
			ccode = #{companyCode}
	</select>

	<select id="getCompanyInfoById" resultMap="CompanyResultMap">
		-- 업체 회원 아이디로 검색
		SELECT
			ccode,
			com_class,
			com_name,
			com_ceo,
			com_addr,
			com_addr_detail,
			com_phone,
			com_stfcount,
			com_email,
			com_parking,
			com_page,
			com_reg_date,
			id,
			com_post_num
		FROM
			company
		WHERE
			id = #{memberId}
	</select>

	<select id="getCompanyByMemberId" resultMap="CompanyResultMap">
		-- 세션 저장용 쿼리
		SELECT
			ccode
		FROM
			company
		WHERE
			id = #{memberId}
	</select>

	<update id="acceptStaff" parameterType="String" >
		/* 업체 직원 승인 */
		UPDATE staff
		<set>
			stf_check = 1, stf_date = now(), stf_appro_id = #{memberId}
		</set>
		WHERE
		id = #{requestId}
	</update>

	<delete id="deleteStaff" parameterType="String" >
		/* 업체 직원 해고 */
		DELETE
		FROM
			staff
		WHERE
			id = #{requestId}
	</delete>

	<update id="modifyCompany" parameterType="Company" >
		/* 업체 수정 */
		UPDATE company
		<set>
			<if test="companyClass != null and companyClass != ''">
				com_class = #{companyClass},
			</if>
			<if test="companyName != null and companyName != ''">
				com_name = #{companyName},
			</if>
			<if test="companyAddr != null and companyAddr != ''">
				com_addr = #{companyAddr},
			</if>
			<if test="companyAddrDetail != null and companyAddrDetail != ''">
				com_addr_detail = #{companyAddrDetail},
			</if>
			<if test="companyPhone != null and companyPhone != ''">
				com_phone = #{companyPhone},
			</if>
			<if test="companyStfCount != null and companyStfCount != ''">
				com_stfcount = #{companyStfCount},
			</if>
			<if test="companyEmail != null and companyEmail != ''">
				com_email = #{companyEmail},
			</if>
			<if test="companyParking != null and companyParking != ''">
				com_parking = #{companyParking},
			</if>
			<if test="companyPage != null and companyPage != ''">
				com_page = #{companyPage}
			</if>
		</set>
		WHERE
		ccode = #{companyCode}
	</update>

	<select id="getStaffSignList" resultMap="ComStaffResultMap">
		-- 직원 등록 신청 리스트
		SELECT
			s.id, s.stf_phone, m.name, s.ccode
		FROM
			staff AS s
		INNER JOIN
			member AS m
		ON
			s.id = m.id
		WHERE
			s.stf_check = 0 AND s.ccode = #{cCode}
	</select>

	<select id="getLastStfCode" resultType="String">
		-- 직원 신청 기본키 숫자 찾기
		SELECT MAX(stfcode) FROM staff
	</select>

	<insert id="insertStaff" parameterType="ComStaff">
		INSERT INTO staff
			(stfcode, id, ccode, `level`, stf_phone, stf_check, stf_appro_id, stf_date)
		VALUES
			(#{stfCode}, #{memberId}, #{cCode}, #{level}, #{stfPhone}, #{stfCheck}, #{stfApproId}, #{stfDate})
	</insert>

	<select id="getStaffList" resultMap="ComStaffResultMap">
		-- 직원 리스트
		SELECT
		s.id, s.stf_phone, m.name, s.ccode
		FROM
		staff AS s
		INNER JOIN
		member AS m
		ON
		s.id = m.id
		WHERE
		s.stf_check = 1 AND s.ccode = #{cCode}
	</select>
	<select id="addStaff" resultMap="ComStaffResultMap">
		-- 직원 신청 로직
		INSERT INTO staff
		(stfcode, id, ccode, `level`, stf_phone, stf_check, stf_appro_id, stf_date)
		VALUES
		('stf3', 'id7', 'ccode3', 'level3', '010-0000-0007', 0, '', null)

	</select>


	<select id="getCompanyListByKeyWord" resultMap="CompanyResultMap">
		-- 키워드로 업체 리스트 검색
		SELECT
			ccode,
			com_class,
			com_name,
			com_ceo,
			com_addr,
			com_addr_detail,
			com_post_num,
			com_phone,
			com_stfcount,
			com_email,
			com_parking,
			com_page,
			com_reg_date,
			id
		FROM
			company
		WHERE
			com_class = #{keyword}
	</select>

	<select id="getComMapByCCode" resultMap="ComMapResultMap">
		-- 업체코드로 업체 좌표및 링크 검색
		SELECT
			c.ccode, c.cm_link, c.cm_x, c.cm_y, c.id
		FROM
			com_map AS c
		WHERE
			c.ccode = #{cCode}
	</select>

	<select id="getCompanyCode" resultType="int">
		/* 업체코드 도출*/
		SELECT 
	    	MAX(CAST(REGEXP_REPLACE(ccode, '[^0-9]', '') AS UNSIGNED)) AS max_number
		FROM 
	    	company;
	</select>


	<insert id="insertCompany" parameterType="Company">
		/* 업체등록 */
		INSERT INTO company
		(	ccode,
			com_class,
			com_name,
			com_ceo,
			com_addr,
			com_addr_detail,
			com_post_num,
			com_phone,
			com_stfcount,
			com_email,
			com_parking,
			com_page,
			com_reg_date,
			id
		)VALUES(
			#{companyCode},
			#{companyClass},
			#{companyName}, 
			#{companyCeo}, 
			#{companyAddr}, 
			#{companyAddrDetail}, 
			#{comPostNum}, 
			#{companyPhone}, 
			#{companyStfCount}, 
			#{companyEmail}, 
			#{companyParking}, 
			#{companyPage}, 
			CURDATE(),
			#{memberId}
		);
	</insert>
	
	
	<update id="updateCeo" parameterType="Company">
	/* 업체 대표 권한 변경 */
	UPDATE
		member
	SET
		level='level2'
	WHERE
		id=#{memberId};
	</update>
</mapper>