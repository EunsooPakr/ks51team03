<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ks51team03.company.mapper.CompanyMapper">

	<resultMap type="Member" id="memberResultMap">
		<!-- pk, column -->
		<id column="m_id" property="memberId"/>
		<result column="m_pw" property="memberPw"/>
		<result column="m_name" property="memberName"/>
		<result column="m_level" property="memberLevel"/>
		<result column="level_name" property="memberLevelName"/>
		<result column="m_email" property="memberEmail"/>
		<result column="m_addr" property="memberAddr"/>
		<result column="m_reg_date" property="memberRegDate"/>
	</resultMap>

	<resultMap type="ks51team03.company.dto.Company" id="CompanyResultMap">
		<id 	column="ccode" property="companyCode" />
		<result column="com_class" property="companyClass" />
		<result column="com_name" property="companyName" />
		<result column="com_ceo" property="companyCeo" />
		<result column="com_addr" property="companyAddr" />
		<result column="com_addr_detail" property="companyAddrDetail" />
		<result column="com_phone" property="companyPhone" />
		<result column="com_stfcount" property="companyStfCount" />
		<result column="com_email" property="companyEmail" />
		<result column="com_parking" property="companyParking" />
		<result column="com_page" property="companyPage" />
		<result column="com_reg_date" property="companyRegDate" />
		<result column="com_post_num" property="comPostNum" />
		<result column="id" property="memberId" />
		<result column="com_post_num" property="comPostNum" />
	</resultMap>

	<resultMap type="ks51team03.company.dto.ComMap" id="ComMapResultMap">
		<id column="ccode" property="cCode"/>
		<result column="cm_link" property="cmLink"/>
		<result column="cm_x" property="cmX"/>
		<result column="cm_y" property="cmY"/>
		<result column="id" property="memberId"/>
	</resultMap>
	<resultMap id="ComStaffResultMap" type="ComStaff">
		<id column="stfcode" property="stfCode" />
		<result column="id" property="memberId" />
		<result column="ccode" property="cCode" />
		<result column="level" property="level" />
		<result column="stf_phone" property="stfPhone" />
		<result column="stf_check" property="stfCheck" />
		<result column="stf_appro_id" property="stfApproId" />
		<result column="stf_date" property="stfDate" />
		<result column="name" property="memberName" />
	</resultMap>
	<resultMap id="ComOperTimeResultMap" type="ComOperTime">
		<id column="otcode" property="otCode" />
		<result column="ccode" property="cCode" />
		<result column="ot_mon" property="otMon" />
		<result column="ot_tue" property="otTue" />
		<result column="ot_wed" property="otWed" />
		<result column="ot_thu" property="otThu" />
		<result column="ot_fri" property="otFri" />
		<result column="ot_sat" property="otSat" />
		<result column="ot_sun" property="otSun" />
		<result column="ot_holiday" property="otHoliday" />
		<result column="ot_regular_holiday" property="otRegularHoliday" />
		<result column="ot_break_time" property="otBreakTime" />
		<result column="id" property="memberId" />
		<result column="ot_reg_date" property="otRegDate" />
	</resultMap>

	<resultMap id="ComReviewResultMap" type="ComReview">
		<id column="revcode" property="revCode" />
		<result column="id" property="memberId" />
		<result column="rev_category" property="revCategory" />
		<result column="ccode" property="cCode" />
		<result column="com_name" property="companyName" />
		<result column="rev_admin_date" property="revAdminDate" />
		<result column="rev_update_date" property="revUpdateDate" />
		<result column="fileidx" property="fileIdx" />
		<result column="rev_scope" property="revScope" />
		<result column="rev_content" property="revContent" />
		<result column="file_path" property="filePath" />
	</resultMap>

	<resultMap id="QuestionResultMap" type="ComQuestion">
		<id column="quesnum" property="quesNum" />
		<result column="ccode" property="cCode" />
		<result column="qctenum" property="qcteNum" />
		<result column="id" property="memberId" />
		<result column="ques_content" property="quesContent" />
		<result column="ques_date" property="quesDate" />
		<result column="com_name" property="companyName" />
	</resultMap>

	<resultMap id="QuestionAnswerResultMap" type="ComQuestionAnswer">
		<id column="qacode" property="qaCode" />
		<result column="id" property="memberId" />
		<result column="quesnum" property="quesNum" />
		<result column="qa_content" property="qaContent" />
		<result column="qa_reg" property="qaReg" />
		<result column="qa_update" property="qaUpdate" />
	</resultMap>

	<resultMap id="ComLikeResultMap" type="ComLike">
		<id column="lkcode" property="lkCode" />
		<result column="id" property="memberId" />
		<result column="ccode" property="cCode" />
		<result column="lk_alarm" property="lkAlarm" />
		<result column="lk_date" property="lkDate" />
		<result column="lk_state" property="lkState" />
		<result column="name" property="memberName" />
	</resultMap>

	<resultMap id="ComInformResultMap" type="ComInform">
		<id column="informcode" property="informCode" />
		<result column="id" property="memberId" />
		<result column="inform_datetime" property="informDateTime" />
		<result column="inform_cycle" property="informCycle" />
		<result column="inform_value" property="informValue" />
		<result column="inform_contents" property="informContents" />
	</resultMap>

	<resultMap id="CompanyImgResultMap" type="CompanyImg">
		<id column="cicode" property="ciCode" />
		<result column="ccode" property="cCode" />
		<result column="file_idx" property="fileIdx" />
		<result column="file_path" property="filePath" />
	</resultMap>

	<select id="getAllReview" resultMap="ComReviewResultMap">
		-- 모든 리뷰 최신순 조회
		SELECT
			r.revcode, r.id, r.ccode, r.rev_admin_date, r.rev_update_date
			, r.file_idx, r.rev_scope, r.rev_content, c.com_name
		FROM
			service_reviews AS r
		INNER JOIN
			company AS c
		ON
			r.ccode = c.ccode
		ORDER BY
			r.rev_admin_date DESC
		LIMIT 6
	</select>

	<select id="getCompanyImgByCcode" parameterType="String" resultMap="CompanyImgResultMap">
		-- 업체 이미지 조회
		SELECT
		ci.cicode, ci.ccode, ci.file_idx, f.file_path
		FROM
		company_img AS ci
		LEFT JOIN
		files AS f
		ON
		ci.file_idx = f.file_idx
		WHERE
		ci.ccode = #{cCode}
	</select>

	<select id="getCompanyImgByCcodeForMap" parameterType="List">
		-- 업체 이미지 조회 지도용
		SELECT
		f.file_path
		FROM
		company_img AS ci
		LEFT JOIN
		files AS f
		ON
		ci.file_idx = f.file_idx
		WHERE
		ci.ccode = #{cCode}
	</select>

	<insert id="insertCompanyImg" parameterType="CompanyImg">
		<selectKey keyProperty="ciCode" resultType="String" order="BEFORE">
			SELECT
			CASE
			WHEN COUNT(*) = 0 THEN 'ci1'
			ELSE CONCAT('ci', (MAX(CAST(SUBSTRING_INDEX(cicode, 'ci', -1) AS UNSIGNED)) + 1))
			END
			FROM company_img
		</selectKey>
		-- 업체 대표이미지 등록
		INSERT INTO company_img
		(cicode, ccode, file_idx, file_cate)
		VALUES (#{ciCode}, #{cCode}, #{fileIdx}, '대표이미지')
	</insert>

	<insert id="insertComInformReciPient" parameterType="ComInformReciPient">
		<selectKey keyProperty="irCode" resultType="String" order="BEFORE">
			SELECT
			CASE
			WHEN COUNT(*) = 0 THEN 'ir1'
			ELSE CONCAT('ir', (MAX(CAST(SUBSTRING_INDEX(ircode, 'ir', -1) AS UNSIGNED)) + 1))
			END
			FROM inform_recipient
		</selectKey>
		-- 알림 수신자 등록
		INSERT INTO inform_recipient
		(ircode, id, informcode, ircheck)
		VALUES (#{irCode}, #{memberId}, #{informCode}, '0')
	</insert>

	<insert id="insertComInform" parameterType="ComInform">
		<selectKey keyProperty="informCode" resultType="String" order="BEFORE">
			SELECT
			CASE
			WHEN COUNT(*) = 0 THEN 'inform1'
			ELSE CONCAT('inform', (MAX(CAST(SUBSTRING_INDEX(informcode, 'inform', -1) AS UNSIGNED)) + 1))
			END
			FROM inform
		</selectKey>
		-- 알림 등록
		INSERT INTO inform
			(informcode, id, inform_datetime, inform_cycle, inform_value, inform_contents)
		VALUES
			(#{informCode}, #{memberId}, NOW(), '수시 알림', #{informValue}, #{informContents})
	</insert>

	<select id="getCompanyLikeMemberByCcode" parameterType="String" resultMap="ComLikeResultMap">
		-- 업체 구독자 조회
		SELECT
			l.lkcode, m.name, l.ccode, l.lk_alarm, l.lk_date, l.lk_state, l.id
		FROM
			`like` AS l
		INNER JOIN
			member AS m
		ON
			l.id = m.id
		WHERE
			l.ccode = #{memberId} AND l.lk_alarm = 1 AND l.lk_state = 1
	</select>

	<delete id="deleteReview" parameterType="ComReview" >
		-- 업체 리뷰 삭제
		DELETE
		FROM
		service_reviews
		WHERE
		revcode = #{revCode}
	</delete>

	<insert id="insertReview" parameterType="ComReview">
		<selectKey keyProperty="revCode" resultType="String" order="BEFORE">
			SELECT
			CASE
			WHEN COUNT(*) = 0 THEN 'rev1'
			ELSE CONCAT('rev', (MAX(CAST(SUBSTRING_INDEX(revcode, 'rev', -1) AS UNSIGNED)) + 1))
			END
			FROM service_reviews
		</selectKey>
		-- 리뷰 등록
		INSERT INTO service_reviews
		(revcode, id, ccode, rev_admin_date, rev_update_date, file_idx, rev_scope, rev_content)
		VALUES
		(#{revCode}, #{memberId}, #{cCode}, CURDATE(), null, #{fileIdx}, #{revScope}, #{revContent})
	</insert>

	<insert id="insertQuestion" parameterType="ComQuestion">
		<selectKey keyProperty="quesNum" resultType="String" order="BEFORE">
			SELECT
			CASE
			WHEN COUNT(*) = 0 THEN 'ques1'
			ELSE CONCAT('ques', (MAX(CAST(SUBSTRING_INDEX(quesnum, 'ques', -1) AS UNSIGNED)) + 1))
			END
			FROM questions
		</selectKey>
		-- 문의 등록
		INSERT INTO questions
		(quesnum, ccode, qctenum, id, ques_content, ques_date)
		VALUES
		(#{quesNum}, #{cCode}, #{qcteNum}, #{memberId}, #{quesContent}, #{quesDate})
	</insert>

	<select id="getAnswerByQuesNum" parameterType="String" resultMap="QuestionAnswerResultMap">
		-- 문의 답변 조회
		SELECT
			qa.qacode, qa.id, qa.quesnum, qa.qa_content, qa.qa_reg, qa.qa_update
		FROM
			questions_answer as qa
		WHERE
			quesnum = #{quesnum}
	</select>

	<update id="updateAnswer" parameterType="ComQuestionAnswer">
		-- 문의 답변 수정
		UPDATE
			questions_answer
		SET
			qa_content = #{qaContent},
			qa_update = CURDATE()
		WHERE
			qacode = #{qaCode}
	</update>

	<select id="getCompanyQuestionById" parameterType="String" resultMap="QuestionResultMap">
		-- 특정 문의 검색
		SELECT
		quesnum, ccode, qctenum, id, ques_content, ques_date
		FROM
		questions
		WHERE
		quesnum = #{quesnum}
	</select>

	<select id="getCompanyQuestionAnswer" resultMap="QuestionAnswerResultMap">
		-- 업체 문의 답변 검색
		SELECT
			qa.qacode, qa.id, qa.quesnum, qa.qa_content, qa.qa_reg, qa.qa_update
		FROM
			questions_answer AS qa
		INNER JOIN
			questions AS q
		ON
			qa.quesnum = q.quesnum
		WHERE
			q.ccode =  #{cCode}
	</select>

	<select id="getCompanyQuestion" resultMap="QuestionResultMap">
		-- 업체 문의 검색
		SELECT
			quesnum, ccode, qctenum, id, ques_content, ques_date
		FROM
			questions
		WHERE
			ccode = #{cCode}
	</select>

	<delete id="deleteAnswersByQuesNum" parameterType="ComQuestion" >
		-- 업체 문의 삭제전 답변부터 삭제
		DELETE FROM
			questions_answer
		WHERE
			quesnum = #{quesNum}
	</delete>

	<delete id="deleteQuestion" parameterType="ComQuestion" >
		-- 업체 문의 삭제
		DELETE
		FROM
		questions
		WHERE
		quesnum = #{quesNum}
	</delete>

	<insert id="insertAnswer" parameterType="ks51team03.company.dto.ComQuestionAnswer">
		<selectKey keyProperty="qaCode" resultType="String" order="BEFORE">
			SELECT
			CASE
			WHEN COUNT(qacode) = 0 THEN 'qa1'
			ELSE
			CONCAT(
			'qa',
			(MAX(CAST(SUBSTRING_INDEX(qacode, 'qa', -1) AS UNSIGNED)) + 1)
			)
			END AS qaCode
			FROM
			questions_answer;
		</selectKey>
		INSERT INTO questions_answer
		(qacode, id, quesnum, qa_content, qa_reg, qa_update)
		VALUES
		(#{qaCode}, #{memberId}, #{quesNum}, #{qaContent}, CURDATE(), NULL)
	</insert>

	<select id="avgReviewScore" resultType="Double" parameterType="String">
		-- 리뷰 별점 평균
		SELECT ROUND(AVG(rev_scope), 1)
		FROM service_reviews
		WHERE ccode = #{cCode}
		GROUP BY ccode
	</select>

	<select id="getCompanyReviewCount" resultType="Integer" parameterType="String" >
		-- 업체 리뷰수 검색
		SELECT
			count(ccode)
		FROM
			service_reviews
		WHERE
			ccode = #{cCode}
	</select>

	<select id="getCompanyReview" parameterType="String" resultMap="ComReviewResultMap">
		-- 업체 코드로 리뷰 검색
		SELECT
			r.revcode, r.id, r.ccode, r.rev_admin_date, r.rev_update_date,
			r.file_idx, r.rev_scope, r.rev_content, f.file_path
		FROM
			service_reviews AS r
		left join
			files AS f
		on
			r.file_idx = f.file_idx
		WHERE
			ccode = #{cCode}
	</select>

	<insert id="insertOperTime" parameterType="ComOperTime">
		<selectKey keyProperty="otCode" resultType="String" order="BEFORE">
			SELECT
			CASE
			WHEN COUNT(*) = 0 THEN 'ot1'
			ELSE CONCAT('ot', (MAX(CAST(SUBSTRING_INDEX(otcode, 'ot', -1) AS UNSIGNED)) + 1))
			END
			FROM com_oper_time
		</selectKey>
		-- 문의 등록
		INSERT INTO com_oper_time
		(otcode, ccode, ot_mon, ot_tue, ot_wed, ot_thu, ot_fri, ot_sat, ot_sun
			, ot_holiday, ot_regular_holiday, ot_break_time, id, ot_reg_date)
		VALUES (#{otCode}, #{cCode}, #{otMon}, #{otTue}, #{otWed}, #{otThu}, #{otFri}, #{otSat}, #{otSun},
		#{otHoliday}, #{otRegularHoliday}, #{otBreakTime}, #{memberId}, NOW() )
	</insert>

	<update id="updateOperTime" parameterType="ComOperTime">
		-- 업체 운영시간 수정
		UPDATE com_oper_time
		SET
		ot_mon = #{otMon},
		ot_tue = #{otTue},
		ot_wed = #{otWed},
		ot_thu = #{otThu},
		ot_fri = #{otFri},
		ot_sat = #{otSat},
		ot_sun = #{otSun},
		ot_holiday = #{otHoliday},
		ot_regular_holiday = #{otRegularHoliday},
		ot_break_time = #{otBreakTime},
		ot_reg_date = NOW()
		WHERE otcode = #{otCode}
	</update>

	<select id="getCompanyOperTime" resultMap="ComOperTimeResultMap">
		-- 업체 운영시간 검색
		SELECT
			otcode, ccode, ot_mon, ot_tue, ot_wed, ot_thu, ot_fri, ot_sat, ot_sun, ot_holiday, ot_regular_holiday, ot_break_time, id, ot_reg_date
		FROM
			com_oper_time
		WHERE
			ccode = #{cCode}
	</select>

	<select id="getCompanyList" resultMap="CompanyResultMap">
		-- 전체 업체 검색
		SELECT
			ccode,
			com_class,
			com_name,
			com_ceo,
			com_addr,
			com_addr_detail,
			com_phone,
			com_stfcount,
			com_email,
			com_parking,
			com_page,
			com_reg_date,
			id,
			com_post_num
		FROM
			company
	</select>

	<select id="getCompanyCodeByMemberId" parameterType="String" resultType="String">
		-- 아이디로 직원 여부 및 업체 코드 반환
		SELECT ccode FROM staff WHERE id = #{memberId}
	</select>

	<select id="getCompanyInfoByCcode" resultMap="CompanyResultMap">
		-- ccode로 업체 정보 검색
		SELECT
			ccode,
			com_class,
			com_name,
			com_ceo,
			com_addr,
			com_addr_detail,
			com_phone,
			com_stfcount,
			com_email,
			com_parking,
			com_page,
			com_reg_date,
			id,
			com_post_num
		FROM
			company
		WHERE
			ccode = #{companyCode}
	</select>

	<select id="getCompanyInfoById" resultMap="CompanyResultMap">
		-- 업체 정보 회원 아이디로 검색
		SELECT
			ccode,
			com_class,
			com_name,
			com_ceo,
			com_addr,
			com_addr_detail,
			com_phone,
			com_stfcount,
			com_email,
			com_parking,
			com_page,
			com_reg_date,
			id,
			com_post_num
		FROM
			company
		WHERE
			id = #{memberId}
	</select>

	<select id="getCompanyByMemberId" resultMap="CompanyResultMap">
		-- 세션 저장용 쿼리
		SELECT
			ccode
		FROM
			company
		WHERE
			id = #{memberId}
	</select>

	<update id="updateLevel" parameterType="String">
		-- 업체 직원 승인 전 회원 레벨 변경
		UPDATE member
		<set>
		`level`='level3'
		</set>
		WHERE
		id= #{memberId}
	</update>

	<update id="updateLevelBeforeDelete" parameterType="String">
		-- 업체 직원 해고 전 회원 레벨 변경
		UPDATE member
		<set>
			`level`='level4'
		</set>
		WHERE
		id= #{memberId}
	</update>

	<update id="acceptStaff" parameterType="String" >
		/* 업체 직원 승인 */
		UPDATE staff
		<set>
			stf_check = 1, stf_date = now(), stf_appro_id = #{memberId}
		</set>
		WHERE
		id = #{requestId}
	</update>

	<delete id="deleteStaff" parameterType="String" >
		/* 업체 직원 해고 */
		DELETE
		FROM
			staff
		WHERE
			id = #{requestId}
	</delete>

	<select id="getStaffSignList" resultMap="ComStaffResultMap">
		-- 직원 등록 신청 리스트
		SELECT
			s.id, s.stf_phone, m.name, s.ccode
		FROM
			staff AS s
		INNER JOIN
			member AS m
		ON
			s.id = m.id
		WHERE
			s.stf_check = 0 AND s.ccode = #{cCode}
	</select>

	<select id="getStaffSignLog" parameterType="string" resultType="boolean">
		-- 직원 등록 신청전 신청 이력 확인
		SELECT
		count(id)
		FROM staff
		WHERE id = #{memberId}
	</select>

	<insert id="insertStaff" parameterType="ComStaff">
		<selectKey keyProperty="stfCode" resultType="String" order="BEFORE">
			-- 직원 신청 insert
			SELECT
			CASE
			WHEN
			COUNT(*) = 0 THEN 'stf1'
			ELSE
			CONCAT('stf', (MAX(CAST(SUBSTRING_INDEX(stfcode, 'stf', -1) AS UNSIGNED)) + 1))
			END
			FROM
			staff
		</selectKey>
		INSERT INTO staff
		(stfcode, id, ccode, `level`, stf_phone, stf_check, stf_appro_id, stf_date)
		VALUES
		(#{stfCode}, #{memberId}, #{cCode}, 'level3', #{stfPhone}, 0, null, null)
	</insert>

	<delete id="signStaffCancel" parameterType="String">
		-- 직원 신청 취소
		DELETE FROM staff WHERE id = #{memberId}
	</delete>

	<select id="getStaffList" resultMap="ComStaffResultMap">
		-- 직원 리스트
		SELECT
		s.id, s.stf_phone, m.name, s.ccode
		FROM
		staff AS s
		INNER JOIN
		member AS m
		ON
		s.id = m.id
		WHERE
		s.stf_check = 1 AND s.ccode = #{cCode}
	</select>

	<insert id="addCompanyImage" parameterType="CompanyImg">
		INSERT INTO company_img (file_idx, ccode)
		VALUES (#{fileIdx}, #{cCode})
	</insert>

	<delete id="deleteCompanyImage" parameterType="String">
		DELETE FROM company_img WHERE file_idx = #{imageId}
	</delete>

	<update id="modifyCompany" parameterType="Company" >
		/* 업체 수정 */
		UPDATE company
		<set>
			<if test="companyClass != null and companyClass != ''">
				com_class = #{companyClass},
			</if>
			<if test="companyName != null and companyName != ''">
				com_name = #{companyName},
			</if>
			<if test="companyAddr != null and companyAddr != ''">
				com_addr = #{companyAddr},
			</if>
			<if test="companyAddrDetail != null and companyAddrDetail != ''">
				com_addr_detail = #{companyAddrDetail},
			</if>
			<if test="companyPhone != null and companyPhone != ''">
				com_phone = #{companyPhone},
			</if>
			<if test="companyStfCount != null and companyStfCount != ''">
				com_stfcount = #{companyStfCount},
			</if>
			<if test="companyEmail != null and companyEmail != ''">
				com_email = #{companyEmail},
			</if>
				com_parking = #{companyParking},
			<if test="companyPage != null and companyPage != ''">
				com_page = #{companyPage}
			</if>
		</set>
		WHERE
		ccode = #{companyCode}
	</update>


	<select id="getCompanyListByKeyWord" resultMap="CompanyResultMap">
		-- 키워드로 업체 리스트 검색
		SELECT
			ccode,
			com_class,
			com_name,
			com_ceo,
			com_addr,
			com_addr_detail,
			com_post_num,
			com_phone,
			com_stfcount,
			com_email,
			com_parking,
			com_page,
			com_reg_date,
			id
		FROM
			company
		WHERE
			com_class = #{keyword}
	</select>

	<select id="getComMapByCCode" resultMap="ComMapResultMap">
		-- 업체코드로 업체 좌표및 링크 검색
		SELECT
			c.ccode, c.cm_x, c.cm_y, c.id
		FROM
			com_map AS c
		WHERE
			c.ccode = #{cCode}
	</select>

	<select id="getCompanyCode" resultType="int">
		/* 업체코드 도출*/
		SELECT 
	    	MAX(CAST(REGEXP_REPLACE(ccode, '[^0-9]', '') AS UNSIGNED)) AS max_number
		FROM 
	    	company;
	</select>

	<insert id="insertComMap" parameterType="Company">
		<selectKey keyProperty="cmCode" resultType="String" order="BEFORE">
			SELECT
			CASE
			WHEN COUNT(*) = 0 THEN 'cm1'
			ELSE CONCAT('cm', (MAX(CAST(SUBSTRING_INDEX(cmcode, 'cm', -1) AS UNSIGNED)) + 1))
			END
			FROM com_map
		</selectKey>
		-- 업체 위경도 등록
		INSERT INTO com_map
		(cmcode, ccode, cm_x, cm_y, id, com_map_date)
		VALUES (#{cmCode}, #{companyCode}, #{comMapX}, #{comMapY}, #{memberId}, NOW())
	</insert>


	<insert id="insertCompany" parameterType="Company">
		/* 업체등록 */
		INSERT INTO company
		(	ccode,
			com_class,
			com_name,
			com_ceo,
			com_addr,
			com_addr_detail,
			com_post_num,
			com_phone,
			com_stfcount,
			com_email,
			com_parking,
			com_page,
			com_reg_date,
			id,
			com_active
		)VALUES(
			#{companyCode},
			#{companyClass},
			#{companyName}, 
			#{companyCeo}, 
			#{companyAddr}, 
			#{companyAddrDetail}, 
			#{comPostNum}, 
			#{companyPhone}, 
			#{companyStfCount}, 
			#{companyEmail}, 
			#{companyParking}, 
			#{companyPage}, 
			CURDATE(),
			#{memberId},
			1
		);
	</insert>
	
	
	<update id="updateCeo" parameterType="Company">
	/* 업체 대표 권한 변경 */
	UPDATE
		member
	SET
		level='level2'
	WHERE
		id=#{memberId};
	</update>
</mapper>