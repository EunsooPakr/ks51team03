<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ks51team03.member.mapper.MemberMapper">

	<resultMap type="Member" id="memberResultMap">
		<!-- pk, column -->
		<id 	column="id" 			property="memberId"/>
		<result column="pw" 			property="memberPw"/>
		<result column="name" 			property="memberName"/>
		<result column="level" 			property="memberLevel"/>
		<result column="level_name" 	property="memberLevelName"/>
		<result column="grade" 			property="memberGrade"/>
		<result column="gender" 		property="memberGender"/>
		<result column="birth" 			property="memberBirth"/>
		<result column="phone" 			property="memberPhone"/>
		<result column="email" 			property="memberEmail"/>
		<result column="addr" 			property="memberAddr"/>
		<result column="addr_detail" 	property="memberAddrDetail"/>
		<result column="post_num" 		property="memberPostNum"/>
		<result column="pet" 			property="memberPet"/>
		<result column="sms_check" 		property="memberSmsCheck"/>
		<result column="email_check" 	property="memberEmailCheck"/>
		<result column="regist_date" 	property="memberRgstDate"/>
		
	</resultMap>
	
	<resultMap type="MemberLevel" id="memberLevelResultMap">
		<id 	column="level" 			property="level" />
		<result column="level_name" 	property="levelName" />
	</resultMap>

	<resultMap id="QuestionResultMap" type="ComQuestion">
		<id column="quesnum" property="quesNum" />
		<result column="ccode" property="cCode" />
		<result column="qctenum" property="qcteNum" />
		<result column="id" property="memberId" />
		<result column="ques_content" property="quesContent" />
		<result column="ques_date" property="quesDate" />
		<result column="com_name" property="companyName" />
	</resultMap>

	<resultMap id="ComReviewResultMap" type="ComReview">
		<id column="revcode" property="revCode" />
		<result column="id" property="memberId" />
		<result column="rev_category" property="revCategory" />
		<result column="ccode" property="cCode" />
		<result column="rev_admin_date" property="revAdminDate" />
		<result column="rev_update_date" property="revUpdateDate" />
		<result column="file_idx" property="fileIdx" />
		<result column="rev_scope" property="revScope" />
		<result column="rev_content" property="revContent" />
		<result column="com_name" property="companyName" />
		<result column="file_path" property="filePath" />
	</resultMap>

	<update id="memberReviewModify" parameterType="ComReview" >
		-- 회원 리뷰 수정
		UPDATE
			service_reviews
		<set>
			rev_update_date = NOW(),
			file_idx = #{fileIdx},
			rev_scope = #{revScope},
			rev_content = #{revContent}
		</set>
		WHERE
			revcode = #{revCode}
	</update>

	<select id="getCompanyReviewByRevCode" parameterType="String" resultMap="ComReviewResultMap">
		-- 수정용 특정 회원 리뷰 조회
		SELECT
			r.revcode, r.id, c.com_name, r.rev_admin_date, r.rev_update_date, r.file_idx, r.rev_scope, r.rev_content, f.file_path
		FROM
			service_reviews AS r
		inner JOIN
			company AS c
		ON
			r.ccode = c.ccode
		LEFT JOIN
			files AS f
		ON
			r.file_idx = f.file_idx
		WHERE
			r.revcode = #{revCode}
	</select>

	<select id="getCompanyReview" parameterType="String" resultMap="ComReviewResultMap">
		-- 회원 리뷰 조회
		SELECT
			r.revcode, r.id, c.com_name, r.rev_admin_date, r.rev_update_date, r.file_idx, r.rev_scope, r.rev_content, f.file_path
		FROM
			service_reviews AS r
		inner JOIN
			company AS c
		ON
			r.ccode = c.ccode
		LEFT JOIN
			files AS f
		ON
			r.file_idx = f.file_idx
		WHERE
			r.id = #{memberId}
	</select>

	<delete id="deleteAnswersByQuesNum" parameterType="String">
		-- 답변부터 삭제
		DELETE FROM questions_answer WHERE quesnum = #{quesNum}
	</delete>

	<delete id="memberQuestionDelete" parameterType="String" >
		-- 회원 문의 삭제
		DELETE
		FROM
		questions
		WHERE
		quesnum = #{quesNum}
	</delete>

	<update id="memberQuestionModify" parameterType="ComQuestion" >
		-- 회원 문의 수정
		UPDATE
			questions
		<set>
			qctenum = #{qcteNum},
			ques_content = #{quesContent},
			ques_date= NOW()
		</set>
		WHERE
			quesnum = #{quesNum}
	</update>

	<select id="getQuestionById" parameterType="String" resultMap="QuestionResultMap">
		-- 특정 문의 회원 아이디로 검색
		SELECT
			q.quesnum, c.com_name, q.qctenum, q.id, q.ques_content, q.ques_date
		FROM
			questions AS q
		INNER JOIN
			company AS c
		ON
			q.ccode = c.ccode
		WHERE
			q.id= #{memberId}
	</select>
	
	<sql id="memberSearch">
		SELECT 
			m.id,
			m.pw,
			m.name, 
			m.level,
			l.level_name, 
			m.email, 
			m.addr, 
			m.regist_date
		FROM 
			member as m
			INNER JOIN 
			level as l
			ON 
			m.level = l.level
	</sql>

	<!-- 로그인 테이블 행의 갯수 조회 -->
	<select id="getLoginHistoryCnt" resultType="int">
		/* 로그인 테이블 행의 갯수 조회 */
		SELECT
			COUNT(1)
		FROM
			tb_login;
	</select>

	<!-- 로그인 이력조회 -->
	<select id="getLoginHistory" parameterType="int" resultType="map">
		/* 로그인 이력 조회 */
		SELECT
			l.login_id as loginId,
			m.m_name as memberName,
			m.m_email as memberEmail,
			ml.level_name as levelName,
			l.login_date as loginDate,
			l.logout_date as logoutDate
		FROM
			tb_login AS l
			INNER JOIN
			tb_member AS m
			ON
			l.login_id = m.m_id
			INNER join
			tb_member_level AS ml
			ON
			m.m_level = ml.level_num
		LIMIT #{startRow}, #{rowPerPage};
	</select>
	
	<!-- 회원 검색 조회 -->
	<select id="getSearchList" parameterType="Search" resultMap="memberResultMap">
		/* 회원조회 */
		<include refid="memberSearch"></include>
		<where>
			<if test="searchKey != null and searchKey != ''">
				${searchKey} LIKE CONCAT('%', #{searchValue}, '%')
			</if>
		</where>
		ORDER BY m.id
	</select>
	
	<!-- 회원 탈퇴 -->
	<delete id="removeMemberById" parameterType="String">
		/* 회원탈퇴 */
		DELETE
		FROM
			tb_member
		WHERE 
			m_id = #{memberId};
	</delete>
	
	<!-- 회원 로그인 이력 삭제 -->
	<delete id="removeLoginHistoryById" parameterType="String">
		/* 회원 로그인 이력 삭제 */
		DELETE 
		FROM
			tb_login
		WHERE
			login_id = #{memberId};
	</delete>
	
	<update id="modifyMember" parameterType="Member">
		/* 회원수정 */
		UPDATE tb_member
		<set>
			<if test="memberPw != null and memberPw != ''">
				m_pw = #{memberPw},
			</if>
			<if test="memberName != null and memberName != ''">
				m_name = #{memberName},
			</if>
			<if test="memberLevel > 0">
				m_level = #{memberLevel},
			</if>
			<if test="memberAddr != null and memberAddr != ''">
				m_addr = #{memberAddr},
			</if>
			<if test="memberEmail != null and memberEmail != ''">
				m_email = #{memberEmail}
			</if>
		</set>
		WHERE 
			m_id = #{memberId}
	</update>
	
	<select id="getMemberInfoById" parameterType="String" resultMap="memberResultMap">
		/* 특정회원 정보조회 */
		SELECT 
			id,
			pw,
			name,
			level,
			grade,
			gender,
			birth,
			phone,
			email,
			addr,
			addr_detail,
			post_num,
			pet,
			sms_check,
			email_check,
			regist_date

		FROM
			member
		WHERE 
			id = #{memberId};
	</select>
	
	<insert id="insertMember" parameterType="Member">
		/* 회원가입 */
		INSERT INTO member 
		(	id,
			pw,
			name,
			level,
			grade,
			gender,
			birth,
			phone,
			email,
			addr,
			addr_detail,
			post_num,
			pet,
			sms_check,
			email_check,
			regist_date
		)VALUES(
			#{memberId},
			#{memberPw},
			#{memberName}, 
			#{memberLevel}, 
			#{memberGrade}, 
			#{memberGender}, 
			#{memberBirth}, 
			#{memberPhone}, 
			#{memberEmail}, 
			#{memberAddr}, 
			#{memberAddrDetail}, 
			#{memberPostNum}, 
			#{memberPet}, 
			#{memberSmsCheck}, 
			#{memberEmailCheck}, 
			CURDATE()
		);
	</insert>
	
	<select id="idCheck" parameterType="string" resultType="boolean">
		/* 아이디 중복체크 */
		SELECT 
			COUNT(id)
		FROM 
			member
		WHERE 
			id = #{memberId};
	</select>
	
	<select id="getMemberLevelList" resultMap="memberLevelResultMap">
		/* 회원 등급 조회 */
		SELECT 
			level,
			level_name
		FROM 
			level
	</select>
	
	<select id="getMemberList" resultMap="memberResultMap">
		/* 회원조회 */
		<include refid="memberSearch"></include>
		ORDER BY m.id;
			
	</select>
	
	<!-- application.properties에서 패키지 미리지정 -> mybatis.type-aliases-package=ksmart.mybatis.*.dto -->
	<!-- ksmart.mybatis.member.dto.Member => Member -->
	<!-- ksmart.mybatis.user.dto.User => User -->
	<!-- 
	<select id="getMemberList" resultType="Member">
		/* 회원조회 */
		SELECT 
			m_id 		AS memberId,
			m_pw 		AS memberPw,
			m_name 		AS memberName, 
			m_level 	AS memberLevel, 
			m_email 	AS memberEmail, 
			m_addr 		AS memberAddr, 
			m_reg_date 	AS memberRegDate
		FROM 
			tb_member
	</select>
	 -->
</mapper>